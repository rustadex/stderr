// esc/glyphs.rs

//! A collection of Unicode glyphs for use in terminal output.

pub struct GlyphEnum;

impl GlyphEnum {
    // --- Your Original Glyphs ---
    pub const USAGE: &'static str = "\u{2756}";  // ‚ùñ
    pub const CMDR: &'static str = "\u{2318}";   // ‚åò
    pub const BOTO: &'static str = "\u{232C}";   // ‚å¨
    pub const GEAR: &'static str = "\u{26ED}";   // ‚õ≠
    pub const ROOK: &'static str = "\u{265C}";   // ‚ôú
    pub const PAWN: &'static str = "\u{265F}";   // ‚ôü
    pub const KING: &'static str = "\u{265A}";   // ‚ôö
    pub const QUEEN: &'static str = "\u{265B}";  // ‚ôõ
    pub const VTRI: &'static str = "\u{25BD}";   // ‚ñΩ
    pub const UTRI: &'static str = "\u{25B3}";   // ‚ñ≥
    pub const XMARK: &'static str = "\u{292C}";  // ‚§¨
    pub const INFO: &'static str = "\u{2139}";   // ‚Ñπ
    pub const FAIL: &'static str = "\u{2715}";   // ‚úï
    pub const PASS: &'static str = "\u{2713}";   // ‚úì (Note: Same as CHECK)
    pub const RECV: &'static str = "\u{27F2}";   // ‚ü≤ ANTICLOCKWISE GAPPED CIRCLE ARROW

    // --- Translated from your Bash byte sequences ---
    pub const STAR: &'static str = "\u{2605}";      // ‚òÖ (from $'\xE2\x98\x85')
    pub const LAMBDA: &'static str = "\u{03BB}";    // Œª (from $'\xCE\xBB')
    pub const IDOTS: &'static str = "\u{2026}";     // ‚Ä¶ (from $'\xE2\x80\xA6')
    pub const BOLT: &'static str = "\u{21AF}";      // ‚ÜØ (from $'\xE2\x86\ AF')
    pub const REDO: &'static str = "\u{21BB}";      // ‚Üª (from $'\xE2\x86\xBB')
    pub const SNAKE: &'static str = "\u{264B}";     // ‚ôã (from $'\xe2\x99\x8b', Cancer sign)
    pub const FLAG_OFF: &'static str = "\u{2690}";  // ‚öê (from $'\xe2\x9a\x90')
    pub const FLAG_ON: &'static str = "\u{2691}";   // ‚öë (from $'\xe2\x9a\x91')
    pub const DIAMOND: &'static str = "\u{16DC}";   // ·õú (Runic letter)
    pub const ARROW_UP: &'static str = "\u{2191}";  // ‚Üë (from $'\xE2\x86\x91')
    pub const ARROW_DN: &'static str = "\u{2193}";  // ‚Üì (from $'\xE2\x86\x93')
    pub const DARR: &'static str = "\u{21B3}";      // ‚Ü≥
    pub const UARR: &'static str = "\u{21B0}";      // ‚Ü∞

                                                   // Be careful using it in terminal output.
    pub const DELTA: &'static str = "\u{25B3}";     // ‚ñ≥ (from $'\xE2\x96\xB3', Same as UTRI)
    pub const USPARK: &'static str = "\u{27E1}";    //  wei√üen Rautenfleck (White Concave-Sided Diamond)

    // --- Your Other Glyphs ---
    pub const SWORD: &'static str = "\u{2694}";    // ‚öî
    pub const MOON: &'static str = "\u{263E}";     // ‚òæ
    pub const SUN: &'static str = "\u{2600}";      // ‚òÄ
    pub const SPARK: &'static str = "\u{273B}";    // ‚úª
    pub const COLON2: &'static str = "\u{2237}";   // ‚à∑
    pub const THEREFORE: &'static str = "\u{2234}"; // ‚à¥
    pub const BULLSEYE: &'static str = "\u{29BF}"; // ‚¶ø
    pub const SECT: &'static str = "\u{00A7}";     // ¬ß
    pub const BOWTIE: &'static str = "\u{22C8}";   // ‚ãà
    pub const SUM: &'static str = "\u{2211}";      // ‚àë
    pub const PROD: &'static str = "\u{220F}";     // ‚àè
    pub const DHARMA: &'static str = "\u{2638}";   // ‚ò∏
    pub const SCROLL: &'static str = "\u{07F7}";   // ﬂ∑
    pub const NOTE: &'static str = "\u{266A}";     // ‚ô™
    pub const ANCHOR: &'static str = "\u{2693}";   // ‚öì
    pub const UNLOCK: &'static str = "\u{26BF}";   // ‚öø
    pub const SPINDLE: &'static str = "\u{27D0}";  // ‚üê
    pub const ANOTE: &'static str = "\u{260D}";    // ‚òç (Conjunction)
    pub const CLOCK: &'static str = "\u{23F1}";    // ‚è±
    pub const TIMER: &'static str = "\u{23F2}";    // ‚è≤
    pub const HOURGLASS: &'static str = "\u{29D6}"; // ‚ßñ
    pub const CALENDAR: &'static str = "\u{1F5D3}";// üóì

    pub const ALPHA: &'static str = "\u{03B1}";   // Œ±
    pub const BETA: &'static str = "\u{03B2}";    // Œ≤
    pub const GAMMA: &'static str = "\u{03B3}";   // Œ≥
    pub const DELTA: &'static str = "\u{03B4}";   // Œ¥
    pub const EPSILON: &'static str = "\u{03B5}"; // Œµ
    pub const ZETA: &'static str = "\u{03B6}";    // Œ∂
    pub const ETA: &'static str = "\u{03B7}";     // Œ∑
    pub const THETA: &'static str = "\u{03B8}";   // Œ∏
    pub const IOTA: &'static str = "\u{03B9}";    // Œπ
    pub const KAPPA: &'static str = "\u{03BA}";   // Œ∫
    pub const LAMBDA: &'static str = "\u{03BB}";  // Œª (You already had this one!)
    pub const MU: &'static str = "\u{03BC}";      // Œº
    pub const NU: &'static str = "\u{03BD}";      // ŒΩ
    pub const XI: &'static str = "\u{03BE}";      // Œæ
    pub const OMICRON: &'static str = "\u{03BF}"; // Œø
    pub const PI: &'static str = "\u{03C0}";      // œÄ
    pub const RHO: &'static str = "\u{03C1}";     // œÅ
    pub const SIGMA: &'static str = "\u{03C3}";   // œÉ
    pub const TAU: &'static str = "\u{03C4}";     // œÑ
    pub const UPSILON: &'static str = "\u{03C5}"; // œÖ
    pub const PHI: &'static str = "\u{03C6}";     // œÜ
    pub const CHI: &'static str = "\u{03C7}";     // œá
    pub const PSI: &'static str = "\u{03C8}";     // œà
    pub const OMEGA: &'static str = "\u{03C9}";   // œâ

    pub const CORNER_UR: &'static str = "\u{2514}";    // ‚îî (Up and Right - The final branch in a list)

    // --- Line Drawing ---
    pub const H_LINE: &'static str = "\u{2500}";      // ‚îÄ (Box Drawings Light Horizontal)
    pub const V_LINE: &'static str = "\u{2502}";      // ‚îÇ (Box Drawings Light Vertical)
    pub const T_DOWN: &'static str = "\u{252C}";      // ‚î¨ (Box Drawings Light Down and Horizontal)
    pub const T_UP: &'static str = "\u{2534}";        // ‚î¥ (Box Drawings Light Up and Horizontal)
    pub const T_RIGHT: &'static str = "\u{251C}";     // ‚îú (Box Drawings Light Vertical and Right)
    pub const T_LEFT: &'static str = "\u{2524}";      // ‚î§ (Box Drawings Light Vertical and Left)
    pub const CORNER_DR: &'static str = "\u{250C}";   // ‚ï≠ (Presentation Form for Vertical Right Parenthesis)
                                                     // Often used as a top-left corner
    pub const CORNER_DL: &'static str = "\u{2510}";   // ‚ïÆ (Presentation Form for Vertical Left Parenthesis)
                                                     // Often used as a top-right corner
    pub const CORNER_UR: &'static str = "\u{2514}";   // ‚ï∞ (Presentation Form for Vertical Right Parenthesis)
                                                     // Often used as a bottom-left corner
    pub const CORNER_UL: &'static str = "\u{2518}";   // ‚ïØ (Presentation Form for Vertical Left Parenthesis)
    
    // --- Heavy/Bold Lines (for emphasis) ---
    pub const H_LINE_HEAVY: &'static str = "\u{2501}"; // ‚îÅ
    pub const V_LINE_HEAVY: &'static str = "\u{2503}"; // ‚îÉ
    pub const T_RIGHT_HEAVY: &'static str = "\u{2523}";// ‚î£
    pub const CORNER_UR_HEAVY: &'static str = "\u{2517}";// ‚îó

    // Often used as a bottom-right corner
    // --- Arrows & Pointers ---
    pub const ARROW_RIGHT: &'static str = "\u{2192}"; // ‚Üí
    pub const ARROW_LEFT: &'static str = "\u{2190}";  // ‚Üê
    pub const HEAVY_ARROW_RIGHT: &'static str = "\u{279C}"; // ‚ûú
    pub const POINTER: &'static str = "\u{25B6}";     // ‚ñ∂ (Black Right-Pointing Triangle)

    pub const ARROW_SW: &'static str = "\u{2B0E}";        // ‚¨é (South West Black Arrow)
    pub const ARROW_DN_RIGHT: &'static str = "\u{21B3}";  // ‚Ü≥ (Downwards Arrow with Corner Leftwards)
    pub const ARROW_UP_RIGHT: &'static str = "\u{21B1}";  // ‚Ü± (Upwards Arrow with Corner Leftwards)
    pub const ARROW_CURVE_SE: &'static str = "\u{2BA7}";  // ‚Æß (South East Curved Arrow)
    pub const UNDO: &'static str = "\u{238C}";           // ‚éå

    pub const REDO_CLOSED: &'static str = "\u{27F3}";    // ‚ü≥ (Clockwise Gapped Circle Arrow)
    pub const RETURN_SYMBOL: &'static str = "\u{21A9}";  // ‚Ü© (Leftwards Arrow with Hook)
    pub const NEWLINE_SYMBOL: &'static str = "\u{21B2}"; // ‚Ü≤ (Downwards Arrow with Tip Leftwards)
    pub const BOLT: &'static str = "\u{21AF}";           // ‚ÜØ (You already had this!)
    pub const CURVE_ARROW_LEFT: &'static str = "\u{21B6}";// ‚Ü∂ (Anticlockwise Top Semicircle Arrow)


    //
    // --- Status & Bullets ---
    pub const BULLET: &'static str = "\u{2022}";      // ‚Ä¢
    pub const DOT: &'static str = "\u{2219}";         // ‚àô (Bullet Operator)
    pub const TARGET: &'static str = "\u{25CE}";      // ‚óé (Bullseye)
    pub const RADIO_ON: &'static str = "\u{25C9}";    // ‚óâ (Fisheye)
    pub const RADIO_OFF: &'static str = "\u{25CB}";   // ‚óã (White Circle)
    pub const SQUARE_SMALL: &'static str = "\u{25AB}";// ‚ñ´ (White Small Square)
    //
    // --- Miscellaneous ---
    pub const ELLIPSIS: &'static str = "\u{2026}";    // ‚Ä¶ (Same as IDOTS)
    pub const NOT_EQUAL: &'static str = "\u{2260}";   // ‚â†
    pub const APPROX: &'static str = "\u{2248}";      // ‚âà
    pub const DEGREE: &'static str = "\u{00B0}";      // ¬∞
}
